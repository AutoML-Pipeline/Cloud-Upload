/**
 * Loading States, Skeletons & Progress Indicators
 * Spinners, progress bars, skeleton screens
 */

/* ============================================
   SPINNERS
   ============================================ */

.spinner {
  display: inline-block;
  width: 24px;
  height: 24px;
  border: 3px solid var(--color-gray-200);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spinnerRotate 0.6s linear infinite;
}

@keyframes spinnerRotate {
  to {
    transform: rotate(360deg);
  }
}

.spinnerSmall {
  width: 16px;
  height: 16px;
  border-width: 2px;
}

.spinnerLarge {
  width: 32px;
  height: 32px;
  border-width: 4px;
}

.spinnerXLarge {
  width: 48px;
  height: 48px;
  border-width: 4px;
}

/* Spinner colors */
.spinnerWhite {
  border-color: rgba(255, 255, 255, 0.3);
  border-top-color: white;
}

.spinnerSuccess {
  border-color: var(--color-success-200);
  border-top-color: var(--color-success);
}

.spinnerError {
  border-color: var(--color-error-200);
  border-top-color: var(--color-error);
}

/* Dots spinner */
.spinnerDots {
  display: inline-flex;
  gap: var(--spacing-2);
}

.spinnerDot {
  width: 8px;
  height: 8px;
  background: var(--color-primary);
  border-radius: 50%;
  animation: spinnerDotBounce 1.4s infinite ease-in-out both;
}

.spinnerDot:nth-child(1) {
  animation-delay: -0.32s;
}

.spinnerDot:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes spinnerDotBounce {
  0%, 80%, 100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Pulse spinner */
.spinnerPulse {
  display: inline-block;
  width: 24px;
  height: 24px;
  background: var(--color-primary);
  border-radius: 50%;
  animation: spinnerPulse 1.2s ease-in-out infinite;
}

@keyframes spinnerPulse {
  0%, 100% {
    opacity: 1;
    transform: scale(0.5);
  }
  50% {
    opacity: 0.5;
    transform: scale(1);
  }
}

/* ============================================
   PROGRESS BARS
   ============================================ */

.progress {
  position: relative;
  width: 100%;
  height: 8px;
  background: var(--color-gray-200);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.progressBar {
  height: 100%;
  background: var(--color-primary);
  border-radius: var(--radius-full);
  transition: width 0.3s ease;
}

/* Progress sizes */
.progressSmall {
  height: 4px;
}

.progressLarge {
  height: 12px;
}

.progressXLarge {
  height: 16px;
}

/* Progress colors */
.progressSuccess .progressBar {
  background: var(--color-success);
}

.progressWarning .progressBar {
  background: var(--color-warning);
}

.progressError .progressBar {
  background: var(--color-error);
}

.progressInfo .progressBar {
  background: var(--color-info);
}

/* Gradient progress */
.progressGradient .progressBar {
  background: linear-gradient(
    90deg,
    var(--color-primary),
    var(--color-secondary)
  );
}

/* Striped progress */
.progressStriped .progressBar {
  background-image: linear-gradient(
    45deg,
    rgba(255, 255, 255, 0.15) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.15) 50%,
    rgba(255, 255, 255, 0.15) 75%,
    transparent 75%,
    transparent
  );
  background-size: 20px 20px;
}

.progressStripedAnimated .progressBar {
  animation: progressStripes 1s linear infinite;
}

@keyframes progressStripes {
  from {
    background-position: 20px 0;
  }
  to {
    background-position: 0 0;
  }
}

/* Indeterminate progress */
.progressIndeterminate .progressBar {
  width: 30% !important;
  animation: progressIndeterminate 1.5s ease-in-out infinite;
}

@keyframes progressIndeterminate {
  0% {
    left: -30%;
  }
  100% {
    left: 100%;
  }
}

/* Progress with label */
.progressWithLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-3);
}

.progressLabel {
  flex-shrink: 0;
  font-size: var(--text-sm-size);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
  min-width: 45px;
  text-align: right;
}

.progressWrapper {
  flex: 1;
}

/* ============================================
   CIRCULAR PROGRESS
   ============================================ */

.progressCircular {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.progressCircularSvg {
  transform: rotate(-90deg);
}

.progressCircularTrack {
  fill: none;
  stroke: var(--color-gray-200);
}

.progressCircularBar {
  fill: none;
  stroke: var(--color-primary);
  stroke-linecap: round;
  transition: stroke-dashoffset 0.3s ease;
}

.progressCircularLabel {
  position: absolute;
  font-size: var(--text-sm-size);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
}

/* ============================================
   SKELETON LOADING
   ============================================ */

.skeleton {
  display: block;
  background: var(--color-gray-200);
  border-radius: var(--radius-md);
  animation: skeletonPulse 1.5s ease-in-out infinite;
  position: relative;
  overflow: hidden;
}

@keyframes skeletonPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Skeleton with shimmer effect */
.skeletonShimmer::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.5),
    transparent
  );
  animation: skeletonShimmer 1.5s infinite;
}

@keyframes skeletonShimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Skeleton shapes */
.skeletonText {
  height: 1em;
  border-radius: var(--radius-sm);
}

.skeletonTitle {
  height: 1.5em;
  width: 60%;
  margin-bottom: var(--spacing-3);
}

.skeletonCircle {
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.skeletonAvatar {
  composes: skeletonCircle;
}

.skeletonButton {
  height: 40px;
  width: 120px;
  border-radius: var(--radius-lg);
}

.skeletonCard {
  height: 200px;
  border-radius: var(--radius-xl);
}

.skeletonImage {
  width: 100%;
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
  border-radius: var(--radius-lg);
}

/* ============================================
   SKELETON LAYOUTS
   ============================================ */

.skeletonList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-4);
}

.skeletonListItem {
  display: flex;
  gap: var(--spacing-4);
  align-items: center;
}

.skeletonTable {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-3);
}

.skeletonTableRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: var(--spacing-4);
}

.skeletonGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: var(--spacing-6);
}

/* ============================================
   LOADING OVERLAYS
   ============================================ */

.loadingOverlay {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-4);
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(4px);
  z-index: var(--z-overlay);
  animation: overlayFadeIn 0.2s ease-out;
}

.loadingOverlayDark {
  background: rgba(0, 0, 0, 0.8);
  color: white;
}

@keyframes overlayFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.loadingMessage {
  font-size: var(--text-base-size);
  color: var(--color-text-secondary);
  text-align: center;
}

.loadingOverlayDark .loadingMessage {
  color: rgba(255, 255, 255, 0.9);
}

/* Inline loading state */
.loadingInline {
  display: flex;
  align-items: center;
  gap: var(--spacing-3);
  padding: var(--spacing-4);
}

/* ============================================
   STEP PROGRESS INDICATOR
   ============================================ */

.stepProgress {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.step {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  position: relative;
}

.stepIcon {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--font-weight-semibold);
  font-size: var(--text-sm-size);
  background: var(--color-gray-200);
  color: var(--color-gray-600);
  position: relative;
  z-index: 1;
  transition: all 0.3s ease;
}

.stepActive .stepIcon {
  background: var(--color-primary);
  color: white;
}

.stepCompleted .stepIcon {
  background: var(--color-success);
  color: white;
}

.stepLabel {
  margin-top: var(--spacing-2);
  font-size: var(--text-sm-size);
  color: var(--color-text-muted);
  text-align: center;
}

.stepActive .stepLabel {
  color: var(--color-text-primary);
  font-weight: var(--font-weight-medium);
}

.stepCompleted .stepLabel {
  color: var(--color-text-primary);
}

.stepConnector {
  position: absolute;
  top: 20px;
  left: calc(50% + 20px);
  right: calc(-50% + 20px);
  height: 2px;
  background: var(--color-gray-200);
  z-index: 0;
}

.stepCompleted .stepConnector {
  background: var(--color-success);
}

.step:last-child .stepConnector {
  display: none;
}

/* ============================================
   PULSING DOT INDICATOR
   ============================================ */

.pulsingDot {
  position: relative;
  width: 12px;
  height: 12px;
  background: var(--color-success);
  border-radius: 50%;
}

.pulsingDot::before {
  content: "";
  position: absolute;
  inset: -4px;
  border: 2px solid var(--color-success);
  border-radius: 50%;
  animation: pulsingDotRing 1.5s ease-out infinite;
}

@keyframes pulsingDotRing {
  0% {
    opacity: 1;
    transform: scale(0.8);
  }
  100% {
    opacity: 0;
    transform: scale(1.5);
  }
}

.pulsingDotError {
  background: var(--color-error);
}

.pulsingDotError::before {
  border-color: var(--color-error);
}

.pulsingDotWarning {
  background: var(--color-warning);
}

.pulsingDotWarning::before {
  border-color: var(--color-warning);
}
