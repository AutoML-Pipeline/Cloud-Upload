/**
 * Dividers, Separators & Layout Utility Components
 * Visual separators, spacing helpers, layout primitives
 */

/* ============================================
   DIVIDERS
   ============================================ */

.divider {
  height: 1px;
  background: var(--color-border);
  border: none;
  margin: var(--spacing-4) 0;
}

.dividerThick {
  height: 2px;
}

.dividerDashed {
  height: 0;
  border-top: 1px dashed var(--color-border);
}

.dividerDotted {
  height: 0;
  border-top: 2px dotted var(--color-border);
}

/* Divider with text */
.dividerWithText {
  display: flex;
  align-items: center;
  gap: var(--spacing-4);
  margin: var(--spacing-6) 0;
  color: var(--color-text-muted);
  font-size: var(--text-sm-size);
}

.dividerWithText::before,
.dividerWithText::after {
  content: "";
  flex: 1;
  height: 1px;
  background: var(--color-border);
}

/* Vertical divider */
.dividerVertical {
  width: 1px;
  height: 100%;
  background: var(--color-border);
  margin: 0 var(--spacing-4);
  display: inline-block;
}

/* Divider spacing variants */
.dividerCompact {
  margin: var(--spacing-2) 0;
}

.dividerLoose {
  margin: var(--spacing-8) 0;
}

/* Divider color variants */
.dividerLight {
  background: var(--color-gray-100);
}

.dividerDark {
  background: var(--color-gray-400);
}

.dividerPrimary {
  background: var(--color-primary);
  opacity: 0.2;
}

/* ============================================
   SPACERS
   ============================================ */

.spacer0 { height: var(--spacing-0); }
.spacer1 { height: var(--spacing-1); }
.spacer2 { height: var(--spacing-2); }
.spacer3 { height: var(--spacing-3); }
.spacer4 { height: var(--spacing-4); }
.spacer5 { height: var(--spacing-5); }
.spacer6 { height: var(--spacing-6); }
.spacer8 { height: var(--spacing-8); }
.spacer10 { height: var(--spacing-10); }
.spacer12 { height: var(--spacing-12); }
.spacer16 { height: var(--spacing-16); }
.spacer20 { height: var(--spacing-20); }
.spacer24 { height: var(--spacing-24); }

/* ============================================
   STACK LAYOUT (VERTICAL SPACING)
   ============================================ */

.stack {
  display: flex;
  flex-direction: column;
}

.stackTight {
  gap: var(--spacing-2);
}

.stackCompact {
  gap: var(--spacing-3);
}

.stackComfortable {
  gap: var(--spacing-4);
}

.stackRelaxed {
  gap: var(--spacing-6);
}

.stackLoose {
  gap: var(--spacing-8);
}

/* ============================================
   INLINE LAYOUT (HORIZONTAL SPACING)
   ============================================ */

.inline {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.inlineTight {
  gap: var(--spacing-2);
}

.inlineCompact {
  gap: var(--spacing-3);
}

.inlineComfortable {
  gap: var(--spacing-4);
}

.inlineRelaxed {
  gap: var(--spacing-6);
}

.inlineLoose {
  gap: var(--spacing-8);
}

.inlineWrap {
  flex-wrap: wrap;
}

/* ============================================
   GRID LAYOUTS
   ============================================ */

.grid {
  display: grid;
  gap: var(--spacing-4);
}

.grid2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid3 {
  grid-template-columns: repeat(3, 1fr);
}

.grid4 {
  grid-template-columns: repeat(4, 1fr);
}

.grid6 {
  grid-template-columns: repeat(6, 1fr);
}

.gridAuto {
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

.gridTight {
  gap: var(--spacing-2);
}

.gridRelaxed {
  gap: var(--spacing-6);
}

.gridLoose {
  gap: var(--spacing-8);
}

/* Responsive grid */
@media (max-width: 1024px) {
  .grid4 {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 768px) {
  .grid3,
  .grid4 {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 480px) {
  .grid2,
  .grid3,
  .grid4 {
    grid-template-columns: 1fr;
  }
}

/* ============================================
   FLEX UTILITIES
   ============================================ */

.flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flexBetween {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.flexStart {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.flexEnd {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.flexColumn {
  display: flex;
  flex-direction: column;
}

.flexWrap {
  flex-wrap: wrap;
}

.flex1 {
  flex: 1;
}

/* ============================================
   CONTAINERS
   ============================================ */

.containerFluid {
  width: 100%;
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
}

.containerNarrow {
  max-width: 800px;
  margin: 0 auto;
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
}

.containerBase {
  max-width: 1200px;
  margin: 0 auto;
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
}

.containerWide {
  max-width: 1400px;
  margin: 0 auto;
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
}

/* ============================================
   ASPECT RATIOS
   ============================================ */

.aspectSquare {
  position: relative;
  padding-bottom: 100%;
  overflow: hidden;
}

.aspectVideo {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 */
  overflow: hidden;
}

.aspect4x3 {
  position: relative;
  padding-bottom: 75%;
  overflow: hidden;
}

.aspect21x9 {
  position: relative;
  padding-bottom: 42.86%;
  overflow: hidden;
}

.aspectContent {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* ============================================
   SECTION HEADERS
   ============================================ */

.sectionHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-6);
}

.sectionTitle {
  font-size: var(--text-h3-size);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin: 0;
}

.sectionSubtitle {
  font-size: var(--text-base-size);
  color: var(--color-text-secondary);
  margin-top: var(--spacing-1);
}

.sectionActions {
  display: flex;
  gap: var(--spacing-3);
}

/* ============================================
   EMPTY STATES
   ============================================ */

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-16) var(--spacing-8);
  text-align: center;
}

.emptyStateIcon {
  width: 64px;
  height: 64px;
  color: var(--color-gray-400);
  margin-bottom: var(--spacing-4);
}

.emptyStateTitle {
  font-size: var(--text-h4-size);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin: 0 0 var(--spacing-2);
}

.emptyStateDescription {
  font-size: var(--text-base-size);
  color: var(--color-text-secondary);
  max-width: 500px;
  margin-bottom: var(--spacing-6);
  line-height: 1.6;
}

.emptyStateActions {
  display: flex;
  gap: var(--spacing-3);
}

/* ============================================
   VISIBILITY UTILITIES
   ============================================ */

.showOnHover {
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

*:hover > .showOnHover,
*:focus-within > .showOnHover {
  opacity: 1;
  pointer-events: auto;
}

.hideMobile {
  display: block;
}

@media (max-width: 768px) {
  .hideMobile {
    display: none;
  }
}

.hideDesktop {
  display: none;
}

@media (max-width: 768px) {
  .hideDesktop {
    display: block;
  }
}

/* ============================================
   TRUNCATE TEXT
   ============================================ */

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.lineClamp2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.lineClamp3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.lineClamp4 {
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* ============================================
   SCROLLABLE CONTAINERS
   ============================================ */

.scrollable {
  overflow: auto;
}

.scrollableX {
  overflow-x: auto;
  overflow-y: hidden;
}

.scrollableY {
  overflow-x: hidden;
  overflow-y: auto;
}

.scrollSmooth {
  scroll-behavior: smooth;
}

.scrollHidden {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollHidden::-webkit-scrollbar {
  display: none;
}

/* Custom scrollbar */
.scrollCustom {
  scrollbar-width: thin;
  scrollbar-color: var(--color-gray-400) var(--color-gray-100);
}

.scrollCustom::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.scrollCustom::-webkit-scrollbar-track {
  background: var(--color-gray-100);
}

.scrollCustom::-webkit-scrollbar-thumb {
  background: var(--color-gray-400);
  border-radius: var(--radius-full);
}

.scrollCustom::-webkit-scrollbar-thumb:hover {
  background: var(--color-gray-500);
}

/* ============================================
   Z-INDEX LAYERS
   ============================================ */

.zBase { z-index: var(--z-base); }
.zDropdown { z-index: var(--z-dropdown); }
.zSticky { z-index: var(--z-sticky); }
.zFixed { z-index: var(--z-fixed); }
.zOverlay { z-index: var(--z-overlay); }
.zModal { z-index: var(--z-modal); }
.zPopover { z-index: var(--z-popover); }
.zTooltip { z-index: var(--z-tooltip); }

/* ============================================
   SURFACE ELEVATIONS
   ============================================ */

.elevation0 { box-shadow: none; }
.elevation1 { box-shadow: var(--shadow-sm); }
.elevation2 { box-shadow: var(--shadow-md); }
.elevation3 { box-shadow: var(--shadow-lg); }
.elevation4 { box-shadow: var(--shadow-xl); }
.elevation5 { box-shadow: var(--shadow-2xl); }

.elevationHover {
  transition: box-shadow 0.3s ease;
}

.elevationHover:hover {
  box-shadow: var(--shadow-xl);
}

/* ============================================
   BORDERED CONTAINERS
   ============================================ */

.bordered {
  border: 1px solid var(--color-border);
}

.borderedTop {
  border-top: 1px solid var(--color-border);
}

.borderedBottom {
  border-bottom: 1px solid var(--color-border);
}

.borderedLeft {
  border-left: 1px solid var(--color-border);
}

.borderedRight {
  border-right: 1px solid var(--color-border);
}

.borderedThick {
  border-width: 2px;
}

.borderedDashed {
  border-style: dashed;
}

.borderedPrimary {
  border-color: var(--color-primary);
}

/* ============================================
   BACKGROUNDS
   ============================================ */

.bgCard {
  background: var(--color-bg-card);
}

.bgPage {
  background: var(--color-bg-page);
}

.bgHover {
  background: var(--color-bg-hover);
}

.bgPrimary {
  background: var(--color-primary-50);
}

.bgSuccess {
  background: var(--color-success-50);
}

.bgWarning {
  background: var(--color-warning-50);
}

.bgError {
  background: var(--color-error-50);
}

.bgInfo {
  background: var(--color-info-50);
}
